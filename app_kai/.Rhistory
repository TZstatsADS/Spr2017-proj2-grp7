plot_ly(x = ~Year, y = ~Total, size = ~(Total),
text = ~State, hoverinfo = "text") %>%
layout() %>%
add_markers(color = ~Fuel, frame = ~Year, ids = ~State) %>%
animation_opts(1000, easing = "elastic") %>%
animation_button(
x = 1, xanchor = "right", y = 0, yanchor = "bottom"
) %>%
animation_slider(
currentvalue = list(prefix = "Year ", font = list(color="red"))
)
base
ani_df <- data.frame(Year = as.numeric(ma[,1]), State  = factor(ma[,2]),
Fuel = factor(ma[,3]), Total = as.numeric(ma[,4]),
stringsAsFactors = FALSE)
ani_df
base <- ani_df %>%
plot_ly(x = ~Year, y = ~Total, size = ~(Total),
text = ~State, hoverinfo = "text") %>%
layout() %>%
add_markers(color = ~Fuel, frame = ~Year, ids = ~State)
base
base <- ani_df %>%
plot_ly(x = ~Year, y = ~Total, size = ~(Total),
text = ~State, hoverinfo = "text") %>%
layout() %>%
add_markers(color = ~Fuel, frame = ~Year, ids = ~State)
base
base <- ani_df %>%
plot_ly(x = ~Year, y = ~Total, size = ~(Total),
text = ~State, hoverinfo = "text")
base
base <- ani_df %>%
plot_ly(x = ~Year, y = ~log(Total), size = ~(Total),
text = ~State, hoverinfo = "text") %>%
layout() %>%
add_markers(color = ~Fuel, frame = ~Year, ids = ~State) %>%
animation_opts(1000, easing = "elastic") %>%
animation_button(
x = 1, xanchor = "right", y = 0, yanchor = "bottom"
) %>%
animation_slider(
currentvalue = list(prefix = "Year ", font = list(color="red"))
)
base
base <- ani_df %>%
plot_ly(x = ~Year, y = ~log(Total), size = ~(Total),
text = ~State, hoverinfo = "text") %>%
layout()
base
base <- ani_df %>%
plot_ly(x = ~Year, y = ~log(Total), size = ~(Total),
text = ~State, hoverinfo = "text") %>%
layout() %>%
add_markers(color = ~Fuel
)
base
year = 2001
state = "CA"
table_grow_afs[,as.character(c(year:year+3)), state]
table_grow_afs[,as.character(c(year)), state]
table_grow_afs[,as.character(c(year)), state]
table_grow_afs[,as.character(c(year:year+10)), state]
years_total
year = 1968
table_grow_afs[,as.character(c(year:year+10)), state]
seq(1970,2018,4)
length(seq(1970,2018,4))
find_info <- function(year, state){
Fuel.Type <- names(which.max(table_grow_afs[,as.character(c(year:year+3)), state]))
Sum.Year <- sum(table_grow_afs[,as.character(year), state])
return(c(year, state, Fuel.Type, Sum.Year))
}
ma <- t(mapply(find_info,rep(seq(1970,2018,4), each=51),rep(states_total,time = 13)))
find_info <- function(year, state){
Fuel.Type <- names(which.max(table_grow_afs[,as.character(c(year:year+3)), state]))
Sum.Year <- sum(table_grow_afs[,as.character(year), state])
return(c(year, state, Fuel.Type, Sum.Year))
}
find_info(2013,"CA")
ma <- t(mapply(find_info,rep(seq(1970,2014,4), each=51),rep(states_total,time = 12)))
rep(seq(1970,2014,4), each=51)
rep(states_total,time = 12)
mapply(find_info,rep(seq(1970,2014,4), each=51),rep(states_total,time = 12)
)
c(year:year+3)
(year:year+3)
(year:year+3)
year
year:(year+3)
Fuel.Type <- names(which.max(table_grow_afs[,as.character((year:(year+3))), state]))
find_info <- function(year, state){
Fuel.Type <- names(which.max(table_grow_afs[,as.character((year:(year+3))), state]))
Sum.Year <- sum(table_grow_afs[,as.character(year), state])
return(c(year, state, Fuel.Type, Sum.Year))
}
ma <- t(mapply(find_info,rep(seq(1970,2014,4), each=51),rep(states_total,time = 12)))
year:(year+3)
as.character(year:(year+3))
table_grow_afs[,as.character(year:(year+3)), state]
state
table_grow_afs[,as.character(year:(year+3)), "CA"]
table_grow_afs[,as.character(year), "CA"]
table_grow_afs[,"1999", "CA"]
table_grow_afs[,c("1999"), "CA"]
table_grow_afs[,c("1999","2000"), "CA"]
table_grow_afs[,c("1999":"2003"), "CA"]
table_grow_afs[,("1999":"2003"), "CA"]
"1999":"2003"
table_grow_afs[,as.character("1999":"2003"), "CA"]
table_grow_afs[,as.character(1999:2003), "CA"]
table_grow_afs[,as.character(1999:2003), "CA"]
Fuel.Type <- names(which.max(rowSums(table_grow_afs[,as.character(year:(year+3)), state])))
Sum.Year <- sum(table_grow_afs[,as.character(year), state])
return(c(year, state, Fuel.Type, Sum.Year))
find_info <- function(year, state){
Fuel.Type <- names(which.max(rowSums(table_grow_afs[,as.character(year:(year+3)), state])))
Sum.Year <- sum(table_grow_afs[,as.character(year), state])
return(c(year, state, Fuel.Type, Sum.Year))
}
ma <- t(mapply(find_info,rep(seq(1970,2014,4), each=51),rep(states_total,time = 12)))
(table_grow_afs[,as.character(year:(year+3)), state])
year
(table_grow_afs[,as.character(1968:1971), state])
1968:1971
as.character(1968:1971)
as.character(1968:1971)
table_grow_afs[,as.character(1968:1971), state]
table_grow_afs[,as.character(1968:1971), "CA"]
table_grow_afs[,as.character(1968), "CA"]
table_grow_afs[,"1968", "CA"]
table_grow_afs[,"1988", "CA"]
table_grow_afs[,"1968", "CA"]
State
data.frame(table_grow_afs[,"1971",])
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
data.frame(table_grow_afs[,"1971",])
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
data.frame(table_grow_afs[,"1971",])
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
library(RCurl)
library(RJSONIO)
library(leaflet)
library(igraph)
library(geosphere)
load("./Nodes.RData")
load("./Segments.RData")
load("./Original Segments.RData")
install.packages(c("httr", "jsonlite", "lubridate"))
install.packages(c("httr", "jsonlite", "lubridate"))
install.packages(c("httr", "jsonlite", "lubridate"))
install.packages(c("httr", "jsonlite", "lubridate"))
install.packages(c("httr", "jsonlite", "lubridate"))
install.packages("httr")
install.packages("httr")
library("httr")
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
sample2
content(sample2)
str(sample2)
content(sample2)
sample2$category$childcategories[[3]]$name
sample2$category$childcategories[[3]]$name[[1]]
sample2$category$childcategories
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
content(sample2)
sample2$content
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
content(sample2)
?httr
sample2
library("httr")
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
content(sample2)
sample2$category$childcategories[[8]]$name
sample2$status_code
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=370")
content(sample2)
sample2$status_code
geocode
fileUrl<-""http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=370""
download.file(fileUrl,'./data.csv','curl')
fileUrl<-"http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=370"
download.file(fileUrl,'./data.csv','curl')
setwd("~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai")
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=370")
download.file(fileUrl,'./data.csv','curl')
metadata1<-read.csv('./data.csv')
metadata1
?download.file
library("httr")
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=370")
content(sample2)
str(sample2)
type(sample2)
classs(sample2)
class(sample2)
?httr
content2<-content(sample2)
contend2
content2
content2$category$childseries[[133]]$category$childseries[[133]]$series_id
content2$category$childseries[[133]]$category$childseries[[133]]$series_id
content2$category$childseries[[133]]$category$childseries[[133]]$series_id
str(content2)
content2$category$parent_category_id
content2$request$category_id
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
content(sample2)
content2 <- content(sample2)
content2$request$category_id
content2$request$command
content2$category$parent_category_id
content2$category$category_id
content2$category$childseries
content2$category$childcategories
head(content2$category$childcategories)
table(content2$category$childcategories)
unlist(content2$category$childcategories)
unlist(content2$category$childseries)
unlist(content2$category$childcategories)
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=40203")
content3 <- content(sample2)
content3$category$notes
content3$category$childcategories
unlist(content3$category$childcategories)
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=40204")
content4 <- content(sample2)
content4$category$childcategories
unlist(content4$category$childcategories)
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=40211")
content5 <- content(sample2)
unlist(content5$category$childcategories)
unlist(unlist(content5$category$childcategories))
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=371")
content2 <- content(sample2)
content2$category$childcategories
unlist(content2$category$childcategories)
sample2 <- GET("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=40203")
content3 <- content(sample2)
content3$category$childcategories
unlist(content3$category$childcategories)
yaofengle <- swim_in_database(371)
swim_in_database <- function(id){
api.url <- GET(paste("http://api.eia.gov/category/?api_key=0fde4c221e906469649b81298f5a34dc&category_id=",
id))
return(content(api.url))
}
yaofengle <- swim_in_database(371)
unlist(yaofengle$category$childcategories)
yaofengle <- swim_in_database(40203)
unlist(yaofengle$category$childcategories)
unlist(yaofengle$category$childcategories)
unlist(yaofengle$category$childcategories)
api.url <- "http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=TOTAL.REICBUS.A"
download.file(api.url,'./data.csv')
api.url <- GET("http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=TOTAL.REICBUS.A")
content(api.url)
str(content(api.url))
content1 <- content(api.url)
content1$series
data.frame(content1$series)
download.file(api.url,'./data.csv',"curl")
api.url <- GET("http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=TOTAL.REICBUS.A")
download.file(api.url,'.../data.csv',"curl")
?download.file()
length(api.url)
api.url <- ("http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=TOTAL.REICBUS.A")
download.file(api.url,'.../data.csv',"curl")
download.file(api.url,'.../data.csv')
api.url <- GET("http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=TOTAL.REICBUS.A")
api.url
api.url$content
content1 <- (api.url$content)
content1
str(content1)
urlkc1 <- "http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=AEO.2017.AEO2016REF.ECI_SAL_ALF1_FLC_NA_NA_NA_TH.A"
download.file(urlkc1,'.../data.csv')
api.url <- GET(urlkc1)
str(api.url)
header(api.url)
api.url$headers
urlkc1 <- "http://api.eia.gov/series/?api_key=0fde4c221e906469649b81298f5a34dc&series_id=AEO.2017.AEO2016REF.ECI_SAL_ALF1_FLC_NA_NA_NA_TH.A"
download.file(urlkc1,'.../data.csv',"curl")
?download.file()
download.file(urlkc1,'.../data.csv',"wget")
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels", "wordcloud", "RColorBrewer",
"tidytext", "ggplot2","scales" )
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("topicmodels")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
library("scales")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
source("../lib/kai_source.R")
source("../lib/kai_source.R")
source("../lib/ggradar.R")
f.speechlinks
urls <- html.page %>% # feed `main.page` to the next step
html_nodes("td") %>% # get the CSS nodes
html_attr("http://www.eia.gov/renewable/afv/users.php?fs=A&uyear=2014%2C2013%2C2012%2C2011%2C2010%2C2009%2C2008%2C2007%2C2006%2C2005%2C2004%2C2003&uvehcat=Automobiles_Compact%2CAutomobiles_Fullsize%2CAutomobiles_Midsize%2CAutomobiles_Subcompact%2CBuses%2CLow%20Speed%20Vehicles%2CMotorcycles%2COther%20Vehicles%2CPickups%2CSUVs%2CTrucks%2CVans_Light%20Duty%2CVans_Medium%20Duty%2CVans_Minivans&uframe=Electric%2CFederal%2CNaturalGas%2CPropane%2CState%2CTransit&ufueltype=CNG&econfig=Dedicated%2CNon-dedicated&ustate=AL%2CAK%2CAZ%2CAR%2CCA%2CCO%2CCT%2CDE%2CDC%2CFL%2CGA%2CHI%2CID%2CIL%2CIN%2CIA%2CKS%2CKY%2CLA%2CME%2CMD%2CMA%2CMI%2CMN%2CMS%2CMO%2CMT%2CNE%2CNV%2CNH%2CNJ%2CNM%2CNY%2CNC%2CND%2COH%2COK%2COR%2CPA%2CRI%2CSC%2CSD%2CTN%2CTX%2CUT%2CVT%2CVA%2CWA%2CWV%2CWI%2CWY&weightclass=LD%2CMD%2CHD#tabs_charts-5") # extract the URLs
html.page <- "http://www.eia.gov/renewable/afv/users.php?fs=A&uyear=2014%2C2013%2C2012%2C2011%2C2010%2C2009%2C2008%2C2007%2C2006%2C2005%2C2004%2C2003&uvehcat=Automobiles_Compact%2CAutomobiles_Fullsize%2CAutomobiles_Midsize%2CAutomobiles_Subcompact%2CBuses%2CLow%20Speed%20Vehicles%2CMotorcycles%2COther%20Vehicles%2CPickups%2CSUVs%2CTrucks%2CVans_Light%20Duty%2CVans_Medium%20Duty%2CVans_Minivans&uframe=Electric%2CFederal%2CNaturalGas%2CPropane%2CState%2CTransit&ufueltype=CNG&econfig=Dedicated%2CNon-dedicated&ustate=AL%2CAK%2CAZ%2CAR%2CCA%2CCO%2CCT%2CDE%2CDC%2CFL%2CGA%2CHI%2CID%2CIL%2CIN%2CIA%2CKS%2CKY%2CLA%2CME%2CMD%2CMA%2CMI%2CMN%2CMS%2CMO%2CMT%2CNE%2CNV%2CNH%2CNJ%2CNM%2CNY%2CNC%2CND%2COH%2COK%2COR%2CPA%2CRI%2CSC%2CSD%2CTN%2CTX%2CUT%2CVT%2CVA%2CWA%2CWV%2CWI%2CWY&weightclass=LD%2CMD%2CHD#tabs_charts-5"
f.speechlinks
node.type = "td"
links <- main.page %>% # feed `main.page` to the next step
html_nodes(node.type) %>% # get the CSS nodes
html_text()
links
str(links)
table(links)
node.type
main.page
main.page <- read_html("http://www.eia.gov/renewable/afv/users.php?fs=A&uyear=2014%2C2013%2C2012%2C2011%2C2010%2C2009%2C2008%2C2007%2C2006%2C2005%2C2004%2C2003&uvehcat=Automobiles_Compact%2CAutomobiles_Fullsize%2CAutomobiles_Midsize%2CAutomobiles_Subcompact%2CBuses%2CLow%20Speed%20Vehicles%2CMotorcycles%2COther%20Vehicles%2CPickups%2CSUVs%2CTrucks%2CVans_Light%20Duty%2CVans_Medium%20Duty%2CVans_Minivans&uframe=Electric%2CFederal%2CNaturalGas%2CPropane%2CState%2CTransit&ufueltype=CNG&econfig=Dedicated%2CNon-dedicated&ustate=AL%2CAK%2CAZ%2CAR%2CCA%2CCO%2CCT%2CDE%2CDC%2CFL%2CGA%2CHI%2CID%2CIL%2CIN%2CIA%2CKS%2CKY%2CLA%2CME%2CMD%2CMA%2CMI%2CMN%2CMS%2CMO%2CMT%2CNE%2CNV%2CNH%2CNJ%2CNM%2CNY%2CNC%2CND%2COH%2COK%2COR%2CPA%2CRI%2CSC%2CSD%2CTN%2CTX%2CUT%2CVT%2CVA%2CWA%2CWV%2CWI%2CWY&weightclass=LD%2CMD%2CHD#tabs_charts-5")
f.speechlinks
f.speechlinks
links <- main.page %>% # feed `main.page` to the next step
html_nodes(node.type) %>% # get the CSS nodes
html_text() # extract the link text
links
node.type <- "td+ td"
links <- main.page %>% # feed `main.page` to the next step
html_nodes(node.type) %>% # get the CSS nodes
html_text() # extract the link text
links
setwd("~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai")
vehicle1<- read.csv(paste(folder_path_kai,"*.csv"))
folder_path_kai <- ".../data/vehicle_data/"
vehicle1<- read.csv(paste(folder_path_kai,"*.csv"))
folder_path_kai <- "../data/vehicle_data/"
vehicle1<- read.csv(paste(folder_path_kai,"*.csv"))
temp = list.files(pattern="../data/vehicle_data/*.csv")
temp
temp = list.files(path = "../data/vehicle_data/", pattern = "*.csv")
temp
folder_path_kai <- "../data/vehicle_data/"
folder_path_kai <- "../data/vehicle_data/"
temp = list.files(path = folder_path_kai, pattern = "*.csv")
ca_vehicle = lapply(temp, read.csv)
ca_vehicle = lapply(temp, read.csv, path = folder_path_kai)
temp <- paste(folder_path_kai, temp)
temp
ca_vehicle = lapply(temp, read.csv)
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv)
temp
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = sapply(temp, read.csv)
read.csv(temp[1])
ca_vehicle = lapply(temp, read.csv)
ca_vehicle = lapply(temp, read.csv, header = T)
temp
read.csv(temp[1])
read.csv(temp[2])
temp[2]
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv)
ca_vehicle = lapply(temp, read.csv, header = T)
ca_vehicle
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv, header = T)
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv, header = T)
ca_vehicle
sapply(ca_vehicle, colnames, c("Year","Vehicles","Comsumption"))
ca_vehicle
ca_vehicle[[3]]
ca_vehicle_df <- ca_vehicle[[1]]
str(ca_vehicle_df)
ca_vehicle[[1]]
ca_vehicle[1]
ca_vehicle[[1]]
temp
ca_vehicle_df <- ca_vehicle[[1]]
colnames(lca_vehicle_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df <- ca_vehicle[[1]]
colnames(ca_vehicle_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df$Type = "CNG"
ca_vehicle_df
length(temp)
nchar(temp)
temp_df$Type = substr(temp[i],22,24)
temp_df <- ca_vehicle[[i]]
i=3
temp_df <- ca_vehicle[[i]]
temp_df$Type = substr(temp[i],22,24)
temp_df
for (i in 2:6){
temp_df <- ca_vehicle[[i]]
temp_df$Type = substr(temp[i],22,24)
ca_vehicle_df <- cbind(ca_vehicle_df, temp_df)
}
temp_df
cbind(ca_vehicle_df, temp_df)
ca_vehicle_df
for (i in 2:6){
temp_df <- ca_vehicle[[i]]
temp_df$Type = substr(temp[i],22,24)
colnames(temp_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df <- cbind(ca_vehicle_df, temp_df)
}
ca_vehicle_df <- ca_vehicle[[1]]
colnames(ca_vehicle_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df$Type = "CNG"
for (i in 2:6){
temp_df <- ca_vehicle[[i]]
temp_df$Type = substr(temp[i],22,24)
colnames(temp_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df <- rbind(ca_vehicle_df, temp_df)
}
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv, header = T)
sapply(ca_vehicle, colnames, c("Year","Vehicles","Comsumption"))
ca_vehicle_df <- ca_vehicle[[1]]
colnames(ca_vehicle_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df$Type = "CNG"
for (i in 2:6){
temp_df <- ca_vehicle[[i]]
colnames(temp_df) <- c("Year", "Vehicles", "Consumptions")
temp_df$Type = substr(temp[i],22,24)
ca_vehicle_df <- rbind(ca_vehicle_df, temp_df)
}
ca_vehicle_df
geocode
shiny::runApp()
runApp()
runApp()
runApp()
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv, header = T)
sapply(ca_vehicle, colnames, c("Year","Vehicles","Comsumption"))
ca_vehicle_df <- ca_vehicle[[1]]
colnames(ca_vehicle_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df$Type = "CNG"
for (i in 2:6){
temp_df <- ca_vehicle[[i]]
colnames(temp_df) <- c("Year", "Vehicles", "Consumptions")
temp_df$Type = substr(temp[i],22,24)
ca_vehicle_df <- rbind(ca_vehicle_df, temp_df)
}
ca_vehicle_df
folder_path_kai <- "../data/vehicle_data/"
temp <- list.files(path = folder_path_kai, pattern = "*.csv")
temp <- paste(folder_path_kai, temp, sep = "")
ca_vehicle = lapply(temp, read.csv, header = T)
sapply(ca_vehicle, colnames, c("Year","Vehicles","Comsumption"))
ca_vehicle_df <- ca_vehicle[[1]]
colnames(ca_vehicle_df) <- c("Year", "Vehicles", "Consumptions")
ca_vehicle_df$Type = "CNG"
for (i in 2:6){
temp_df <- ca_vehicle[[i]]
colnames(temp_df) <- c("Year", "Vehicles", "Consumptions")
temp_df$Type = substr(temp[i],22,24)
ca_vehicle_df <- rbind(ca_vehicle_df, temp_df)
}
runApp()
runApp()
