add_trace(y = ~HY, name = 'HY', visible = T) %>%
add_trace(y = ~LNG, name = 'LNG', visible = T) %>%
add_trace(y = ~LPG, name = 'LPG', visible = T) %>%
layout(
title = "the Number of Fuel Stations",
xaxis = list(title = 'Year'),
yaxis = list(title = '# Alternative Fuel Stations'),
barmode = 'stack'
# updatemenus = list(
#   list(
#     #y = 0.8,
#     buttons = list(
#
#       list(method = "restyle",
#            args = list("visible", c(T,T,T,T,T,T,T)),
#            label = "ALL"),
#
#       list(method = "restyle",
#            args = list("visible", c("legendonly","legendonly",T,"legendonly","legendonly","legendonly","legendonly")),
#            label = "ELEC")
#     )
# ),
# buttons = list(
#   list(method = "restyle",
#        args = list("type",rep("scatter",7)),
#        label = "Scatter"
#        ),
#   list(method = "restyle",
#        args = list("type",rep("Bar",7)),
#        label = "Bar"
#        )
#    )
#
#   )
# )
)
DATA_trend1 %>%
plot_ly(x = ~Year, y = ~BD, type = 'bar', name = 'BD', visible = T) %>%
add_trace(y = ~CNG, name = 'CNG', visible = T) %>%
add_trace(y = ~E85, name = 'E85', visible = T) %>%
add_trace(y = ~ELEC, name = 'ELEC', visible = T) %>%
add_trace(y = ~HY, name = 'HY', visible = T) %>%
add_trace(y = ~LNG, name = 'LNG', visible = T) %>%
add_trace(y = ~LPG, name = 'LPG', visible = T) %>%
layout(
title = "the Number of Fuel Stations",
xaxis = list(title = ''),
yaxis = list(title = '# Alternative Fuel Stations'),
barmode = 'stack'
# updatemenus = list(
#   list(
#     #y = 0.8,
#     buttons = list(
#
#       list(method = "restyle",
#            args = list("visible", c(T,T,T,T,T,T,T)),
#            label = "ALL"),
#
#       list(method = "restyle",
#            args = list("visible", c("legendonly","legendonly",T,"legendonly","legendonly","legendonly","legendonly")),
#            label = "ELEC")
#     )
# ),
# buttons = list(
#   list(method = "restyle",
#        args = list("type",rep("scatter",7)),
#        label = "Scatter"
#        ),
#   list(method = "restyle",
#        args = list("type",rep("Bar",7)),
#        label = "Bar"
#        )
#    )
#
#   )
# )
)
runApp()
runApp()
runApp()
?updatemenus
?
updatemenus
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_ebola.csv')
# restrict from June to September
df <- subset(df, Month %in% 6:9)
head(df)
g <- list(
scope = 'usa',
showframe = F,
showland = T,
landcolor = toRGB("grey90")
)
g1 <- c(
g,
resolution = 50,
showcoastlines = T,
countrycolor = toRGB("white"),
coastlinecolor = toRGB("white"),
projection = list(type = 'Mercator'),
list(lonaxis = list(range = c(-15, -5))),
list(lataxis = list(range = c(0, 12))),
list(domain = list(x = c(0, 1), y = c(0, 1)))
)
g2 <- c(
g,
showcountries = F,
bgcolor = toRGB("white", alpha = 0),
list(domain = list(x = c(0, .6), y = c(0, .6)))
)
plot(g1)
g1
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
g
df %>%
plot_geo(
locationmode = 'albers us', sizes = c(1, 600), color = I("black")
)
df %>%
plot_geo(
locationmode = 'albers us', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~state,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
)
df
str(table_grow_afs)
?sliderInput()
?sliderInput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
(years_total <= range_year_v)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
apply(table_grow_afs[, 1988, ], c(3,1), sum)
apply(table_grow_afs[, years_total==1988, ], c(3,1), sum)
apply(table_grow_afs[, (years_total==1988, ], c(3,1), sum)
apply(table_grow_afs[, (years_total==1988), ], c(3,1), sum)
years_total
years_total ==1988
table_grow_afs
str(table_grow_afs)
table_grow_afs[, 1988 == input$animationslider, ],
table_grow_afs[, 1988 == input$animationslider, ]
table_grow_afs[, years_total == 1988, ]
apply(table_grow_afs[, years_total == input$animationslider, ], c(3,1), sum)
apply(table_grow_afs[, years_total == 1988, ], c(3,1), sum)
table_grow_afs[, years_total == 1988, ]
df_fuel_state_int
table_fuel_state_int <- apply(table_grow_afs[, selected_years, ], c(3,1), sum)
table_fuel_state_int
apply(table_grow_afs[, years_total == input$animationslider, ], c(3,1), sum)
apply(table_grow_afs[, years_total == 1988, ], c(3,1), sum)
runApp()
runApp()
g1 <- c(
g,
resolution = 50,
showcoastlines = T,
countrycolor = toRGB("white"),
coastlinecolor = toRGB("white"),
projection = list(type = 'Mercator'),
list(lonaxis = list(range = c(-15, -5))),
list(lataxis = list(range = c(0, 12))),
list(domain = list(x = c(0, 1), y = c(0, 1)))
)
g2 <- c(
g,
showcountries = F,
bgcolor = toRGB("white", alpha = 0),
list(domain = list(x = c(0, .6), y = c(0, .6)))
)
str(table_grow_afs)
p <- df %>%
plot_geo(
locationmode = 'albers us', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~state,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
g1 <- c(
g,
resolution = 50,
showcoastlines = T,
countrycolor = toRGB("white"),
coastlinecolor = toRGB("white"),
projection = list(type = 'Mercator'),
list(lonaxis = list(range = c(-15, -5))),
list(lataxis = list(range = c(0, 12))),
list(domain = list(x = c(0, 1), y = c(0, 1)))
)
g2 <- c(
g,
showcountries = F,
bgcolor = toRGB("white", alpha = 0),
list(domain = list(x = c(0, .6), y = c(0, .6)))
)
str(table_grow_afs)
p <- df %>%
plot_geo(
locationmode = 'albers us', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_ebola.csv')
# restrict from June to September
df <- subset(df, Month %in% 6:9)
# ordered factor variable with month abbreviations
df$abbrev <- ordered(month.abb[df$Month], levels = month.abb[6:9])
# September totals
df9 <- subset(df, Month == 9)
# common plot options
g <- list(
scope = 'africa',
showframe = F,
showland = T,
landcolor = toRGB("grey90")
)
g1 <- c(
g,
resolution = 50,
showcoastlines = T,
countrycolor = toRGB("white"),
coastlinecolor = toRGB("white"),
projection = list(type = 'Mercator'),
list(lonaxis = list(range = c(-15, -5))),
list(lataxis = list(range = c(0, 12))),
list(domain = list(x = c(0, 1), y = c(0, 1)))
)
g2 <- c(
g,
showcountries = F,
bgcolor = toRGB("white", alpha = 0),
list(domain = list(x = c(0, .6), y = c(0, .6)))
)
p <- df %>%
plot_geo(
locationmode = 'country names', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~Country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
add_text(
x = 21.0936, y = 7.1881, text = 'Africa', showlegend = F, geo = "geo2"
) %>%
add_trace(
data = df9, z = ~Month, locations = ~Country,
showscale = F, geo = "geo2"
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g1, geo2 = g2
)
p
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
p <- df %>%
plot_geo(
locationmode = 'country names', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~Country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
add_text(
x = 21.0936, y = 7.1881, text = 'Africa', showlegend = F, geo = "geo2"
) %>%
add_trace(
data = df9, z = ~Month, locations = ~Country,
showscale = F, geo = "geo2"
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
p <- df %>%
plot_geo(
locationmode = 'country names', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~Country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
add_text(
x = 21.0936, y = 7.1881, text = 'Africa', showlegend = F, geo = "geo2"
) %>%
add_trace(
data = df9, z = ~Month, locations = ~Country,
showscale = F, geo = g
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
p <- df %>%
plot_geo(
locationmode = 'country names', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~Country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
add_text(
x = 21.0936, y = 7.1881, text = 'Africa', showlegend = F, geo = g
) %>%
add_trace(
data = df9, z = ~Month, locations = ~Country,
showscale = F, geo = g
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
p <- df %>%
plot_geo(
locationmode = 'country names', sizes = c(1, 600), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~Country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
add_text(
x = 199, y = 7.1881, text = 'Africa', showlegend = F, geo = g
) %>%
add_trace(
data = df9, z = ~Month, locations = ~Country,
showscale = F, geo = g
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
g2
p <- df %>%
plot_geo(
locationmode = 'country names', sizes = c(1, 1000), color = I("black")
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~Country,
size = ~Value, color = ~abbrev, text = ~paste(Value, "cases")
) %>%
add_text(
x = 199, y = 7.1881, text = 'Africa', showlegend = F, geo = g
) %>%
add_trace(
data = df9, z = ~Month, locations = ~Country,
showscale = F, geo = g
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
p <- df_fuel_state
df_fuel_state_int
p <- df_fuel_state_int %>%
plot_geo(
locationmode = 'USA-states', sizes = c(1, 1000), color = I("black")
)
p
p <- df_fuel_state_int %>%
plot_geo(
locationmode = 'USA-states', sizes = c(1, 1000), color = I("black")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p
head(df_fuel_state_int
)
head(df)
head(df)
p <- df_fuel_state_int %>%
plot_geo(
locationmode = 'USA-states', sizes = c(1, 1000), color = I("black")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
)
p <- df_fuel_state_int %>%
plot_geo(
locationmode = 'USA-states', sizes = c(1, 1000), color = I("black")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~state,
size = ~tempt, color = ~, text = ~paste(Value, "cases")
)
p <- df_fuel_state_int %>%
plot_geo(
locationmode = 'USA-states', sizes = c(1, 1000), color = I("black")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~state,
size = ~tempt, color = ~, text = ~paste(Value, "cases")
)
df_fuel_state_int
str(df_fuel_state_int)
melt(df_fuel_state_int)
g2 <- c(
g,
showcountries = F,
bgcolor = toRGB("white", alpha = 0),
list(domain = list(x = c(0, .6), y = c(0, .6)))
)
new_df <- melt(df_fuel_state_int)
p <- new_df %>%
plot_geo(
locationmode = 'USA-states', sizes = c(1, 1000), color = I("black")
) %>%
layout(
title = 'Ebola cases reported by month in West Africa 2014<br> Source: <a href="https://data.hdx.rwlabs.org/dataset/rowca-ebola-cases">HDX</a>',
geo = g
) %>%
add_markers(
y = ~Lat, x = ~Lon, locations = ~state,
size = ~ value, color = ~ variable, text = ~paste(Value, "cases")
)
new_df
p
state
zipcode <- read.csv("../data/zip_codes_states.csv")
head(zipcode)
new_zipcode <- zipcode %>%
group_by(state) %>%
summarise(
Lat = Means(latitude),
Lon = Means(longitude)
)
new_zipcode <- zipcode %>%
group_by(state) %>%
summarise(
Lat = Mean(latitude),
Lon = Mean(longitude)
)
new_zipcode <- zipcode %>%
group_by(state) %>%
summarise(
Lat = mean(latitude),
Lon = mean(longitude)
)
new_zipcode
zipcode <- read.csv("../data/zip_codes_states.csv")
new_df <- melt(df_fuel_state_int)
new_df
new_zipcode
zipcode <- read.csv("../data/zip_codes_states.csv")
new_df <- melt(df_fuel_state_int)
new_df
runApp()
runApp()
