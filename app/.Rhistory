ggplot(data = DATA_ranking aes(x = state, y = tempt))+
geom_bar(stat="identity")
ggplot(data = DATA_ranking, aes(x = state, y = tempt))+
geom_bar(stat="identity")
ranking %>%
plot_ly(x = ~ factor(state, levels = state),
y = ~tempt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state),
y = ~tempt, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state),
y = ~tempt, type = 'bar', text = text,
marker = list(color = 'rgb(170,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Rank of States",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state),
y = ~tempt, type = 'bar', text = text,
marker = list(color = 'rgb(170,202,225)',
line = list(color = 'rgb(58,48,107)', width = 1.5))) %>%
layout(title = "Rank of States",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[10],
y = ~tempt[10], type = 'bar', text = text,
marker = list(color = 'rgb(170,202,225)',
line = list(color = 'rgb(58,48,107)', width = 1.5))) %>%
layout(title = "Rank of States",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text = text,
marker = list(color = 'rgb(170,202,225)',
line = list(color = 'rgb(58,48,107)', width = 1.5))) %>%
layout(title = "Rank of States",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text = text,
marker = list(color = 'rgb(107, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5))) %>%
layout(title = "Rank of States",
xaxis = list(title = ""),
yaxis = list(title = "")
)
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text = text,
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5))) %>%
layout(title = "Rank of States",
xaxis = list(title = ""),
yaxis = list(title = "")
)
runApp()
df_fuel_state_int
df_fuel_state_int$tempt
cbind(df_fuel_state_int$tempt,df_pop_state)
cbind(df_fuel_state_int$tempt,df_pop_state, df_fuel_state_int$tempt/df_pop_state)
df_fuel_state_int$tempt
cbind(df_fuel_state_int$tempt,df_pop_state, df_fuel_state_int$tempt/df_pop_state$value)
df_fuel_state_int$tempt <- df_fuel_state_int[,8]
df_fuel_state_int$tempt <- df_fuel_state_int$tempt / df_pop_state$value
df_fuel_state_int$tempt
cbind(df_fuel_state_int$tempt, df_pop_state)
runApp()
library(shiny)
library(leaflet)
library(ggmap)
library(ggplot2)
library(RCurl)
library(RJSONIO)
library(igraph)
library(geosphere)
library(data.table)
## Kai's edit
library(dplyr)
library(reshape2)
library(UScensus2010)
library(choroplethr)
## Kai's edit
source("../lib/findpath.R")
source("../lib/Kai_code.R")
range_year_v <- input$range_year
selected_years <- (years_total>= range_year_v[1]) & (years_total <= range_year_v[2])
selected_years_v <- years_total[selected_years]
### trend part
table_fuel_year_int <- table_fuel_year[selected_years,]
df_fuel_year_int <- data.frame(table_fuel_year_int)
rownames(df_fuel_year_int) <- selected_years_v
df_fuel_year_int$Year <- factor(selected_years_v)
### comparison part
table_fuel_state_int <- apply(table_grow_afs[, selected_years, ], c(3,1), sum)
df_fuel_state_int <- data.frame(table_fuel_state_int)
df_fuel_state_int$SUM <- rowSums(df_fuel_state_int)
df_fuel_state_int$state <- rownames(df_fuel_state_int)
df_fuel_state_int$state2 <- states_total
range_year_v <- c(1800,2018)
selected_years <- (years_total>= range_year_v[1]) & (years_total <= range_year_v[2])
selected_years_v <- years_total[selected_years]
### trend part
table_fuel_year_int <- table_fuel_year[selected_years,]
df_fuel_year_int <- data.frame(table_fuel_year_int)
rownames(df_fuel_year_int) <- selected_years_v
df_fuel_year_int$Year <- factor(selected_years_v)
### comparison part
table_fuel_state_int <- apply(table_grow_afs[, selected_years, ], c(3,1), sum)
df_fuel_state_int <- data.frame(table_fuel_state_int)
df_fuel_state_int$SUM <- rowSums(df_fuel_state_int)
df_fuel_state_int$state <- rownames(df_fuel_state_int)
df_fuel_state_int$state2 <- states_total
states_total
df_fuel_state_int$state2 <- states_full
df_fuel_state_int$tempt <- df_fuel_state_int[,8]
df_fuel_state_int$tempt
df_pop_state$value
df_fuel_state_int$tempt <- df_fuel_state_int$tempt / df_pop_state$value
head(df_fuel_state_int,10)
head(df_fuel_state_int,10)
head(df_fuel_state_int,20)
head(df_fuel_state_int,30)
head(df_fuel_state_int,40)
selected_years <- (years_total>= range_year_v[1]) & (years_total <= range_year_v[2])
selected_years_v <- years_total[selected_years]
### trend part
table_fuel_year_int <- table_fuel_year[selected_years,]
df_fuel_year_int <- data.frame(table_fuel_year_int)
rownames(df_fuel_year_int) <- selected_years_v
df_fuel_year_int$Year <- factor(selected_years_v)
### comparison part
table_fuel_state_int <- apply(table_grow_afs[, selected_years, ], c(3,1), sum)
df_fuel_state_int <- data.frame(table_fuel_state_int)
df_fuel_state_int$SUM <- rowSums(df_fuel_state_int)
df_fuel_state_int$state <- rownames(df_fuel_state_int)
df_fuel_state_int$state2 <- states_full
head(df_fuel_state_int,40)
df_fuel_state_int$tempt <- df_fuel_state_int[,8]
head(df_fuel_state_int,40)
df_fuel_state_int[,8] ==637
which(df_fuel_state_int[,8] ==637)
df_pop_state$value
df_pop_state$value[35]
df_pop_state
df_fuel_state_int <- df_fuel_state_int[order(df_fuel_state_int$state),]
df_fuel_state_int[33,]
df_fuel_state_int[35,]
df_fuel_state_int <- df_fuel_state_int[order(df_fuel_state_int$state2),]
df_fuel_state_int[35,]
df_fuel_state_int[33,]
df_pop_state$value[33]
runApp()
runApp()
runApp()
DATA_ranking
DATA_ranking = df_fuel_state_int[state_rank,]
state_rank <- order(df_fuel_state_int$tempt, decreasing = T)
DATA_ranking = df_fuel_state_int[state_rank,]
DATA_ranking
int_data()$DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text = paste(state2),
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text = paste(state2),
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~ (state2),
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~tempt[1:10],
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~factor(state2, levels = state)t[1:10],
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~factor(state2, levels = state)t[1:10],
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~factor(state2, levels = state)[1:10],
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
int_data()$DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~factor(state, levels = state)[1:10],
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
DATA_ranking %>%
plot_ly(x = ~ factor(state, levels = state)[1:10],
y = ~tempt[1:10], type = 'bar', text =~factor(state, levels = state)[1:10],
marker = list(color = 'rgb(58, 107, 107)',
line = list(color = 'rgb(58,48,107)', width = 1.5)))
runApp()
DATA_trend1
DATA_trend1 = df_fuel_year_int
DATA_trend1
DATA_trend1
$DATA_trend1 %>%
plot_ly(x = ~Year, y = ~BD, type = 'bar', name = 'BD', visible = T) %>%
add_trace(y = ~CNG, name = 'CNG', visible = T) %>%
add_trace(y = ~E85, name = 'E85', visible = T) %>%
add_trace(y = ~ELEC, name = 'ELEC', visible = T) %>%
add_trace(y = ~HY, name = 'HY', visible = T) %>%
add_trace(y = ~LNG, name = 'LNG', visible = T) %>%
add_trace(y = ~LPG, name = 'LPG', visible = T) %>%
layout(
title = "the Number of Fuel Stations",
xaxis = list(title = Year),
yaxis = list(title = '# Alternative Fuel Stations'),
barmode = 'stack'
# updatemenus = list(
#   list(
#     #y = 0.8,
#     buttons = list(
#
#       list(method = "restyle",
#            args = list("visible", c(T,T,T,T,T,T,T)),
#            label = "ALL"),
#
#       list(method = "restyle",
#            args = list("visible", c("legendonly","legendonly",T,"legendonly","legendonly","legendonly","legendonly")),
#            label = "ELEC")
#     )
# ),
# buttons = list(
#   list(method = "restyle",
#        args = list("type",rep("scatter",7)),
#        label = "Scatter"
#        ),
#   list(method = "restyle",
#        args = list("type",rep("Bar",7)),
#        label = "Bar"
#        )
#    )
#
#   )
# )
)
DATA_trend1 %>%
plot_ly(x = ~Year, y = ~BD, type = 'bar', name = 'BD', visible = T) %>%
add_trace(y = ~CNG, name = 'CNG', visible = T) %>%
add_trace(y = ~E85, name = 'E85', visible = T) %>%
add_trace(y = ~ELEC, name = 'ELEC', visible = T) %>%
add_trace(y = ~HY, name = 'HY', visible = T) %>%
add_trace(y = ~LNG, name = 'LNG', visible = T) %>%
add_trace(y = ~LPG, name = 'LPG', visible = T) %>%
layout(
title = "the Number of Fuel Stations",
# xaxis = list(title = Year),
yaxis = list(title = '# Alternative Fuel Stations'),
barmode = 'stack'
# updatemenus = list(
#   list(
#     #y = 0.8,
#     buttons = list(
#
#       list(method = "restyle",
#            args = list("visible", c(T,T,T,T,T,T,T)),
#            label = "ALL"),
#
#       list(method = "restyle",
#            args = list("visible", c("legendonly","legendonly",T,"legendonly","legendonly","legendonly","legendonly")),
#            label = "ELEC")
#     )
# ),
# buttons = list(
#   list(method = "restyle",
#        args = list("type",rep("scatter",7)),
#        label = "Scatter"
#        ),
#   list(method = "restyle",
#        args = list("type",rep("Bar",7)),
#        label = "Bar"
#        )
#    )
#
#   )
# )
)
DATA_trend1 %>%
plot_ly(x = ~Year, y = ~BD, type = 'bar', name = 'BD', visible = T) %>%
add_trace(y = ~CNG, name = 'CNG', visible = T) %>%
add_trace(y = ~E85, name = 'E85', visible = T) %>%
add_trace(y = ~ELEC, name = 'ELEC', visible = T) %>%
add_trace(y = ~HY, name = 'HY', visible = T) %>%
add_trace(y = ~LNG, name = 'LNG', visible = T) %>%
add_trace(y = ~LPG, name = 'LPG', visible = T) %>%
layout(
title = "the Number of Fuel Stations",
xaxis = list(title = 'Year'),
yaxis = list(title = '# Alternative Fuel Stations'),
barmode = 'stack'
# updatemenus = list(
#   list(
#     #y = 0.8,
#     buttons = list(
#
#       list(method = "restyle",
#            args = list("visible", c(T,T,T,T,T,T,T)),
#            label = "ALL"),
#
#       list(method = "restyle",
#            args = list("visible", c("legendonly","legendonly",T,"legendonly","legendonly","legendonly","legendonly")),
#            label = "ELEC")
#     )
# ),
# buttons = list(
#   list(method = "restyle",
#        args = list("type",rep("scatter",7)),
#        label = "Scatter"
#        ),
#   list(method = "restyle",
#        args = list("type",rep("Bar",7)),
#        label = "Bar"
#        )
#    )
#
#   )
# )
)
DATA_trend1 %>%
plot_ly(x = ~Year, y = ~BD, type = 'bar', name = 'BD', visible = T) %>%
add_trace(y = ~CNG, name = 'CNG', visible = T) %>%
add_trace(y = ~E85, name = 'E85', visible = T) %>%
add_trace(y = ~ELEC, name = 'ELEC', visible = T) %>%
add_trace(y = ~HY, name = 'HY', visible = T) %>%
add_trace(y = ~LNG, name = 'LNG', visible = T) %>%
add_trace(y = ~LPG, name = 'LPG', visible = T) %>%
layout(
title = "the Number of Fuel Stations",
xaxis = list(title = ''),
yaxis = list(title = '# Alternative Fuel Stations'),
barmode = 'stack'
# updatemenus = list(
#   list(
#     #y = 0.8,
#     buttons = list(
#
#       list(method = "restyle",
#            args = list("visible", c(T,T,T,T,T,T,T)),
#            label = "ALL"),
#
#       list(method = "restyle",
#            args = list("visible", c("legendonly","legendonly",T,"legendonly","legendonly","legendonly","legendonly")),
#            label = "ELEC")
#     )
# ),
# buttons = list(
#   list(method = "restyle",
#        args = list("type",rep("scatter",7)),
#        label = "Scatter"
#        ),
#   list(method = "restyle",
#        args = list("type",rep("Bar",7)),
#        label = "Bar"
#        )
#    )
#
#   )
# )
)
runApp()
runApp()
runApp()
?updatemenus
?
updatemenus
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai")
shiny::runApp()
runApp()
runApp()
runApp()
source("../lib/findpath.R")
source("../lib/Kai_code.R")
library(shiny)
library(leaflet)
library(ggmap)
library(ggplot2)
library(RCurl)
library(RJSONIO)
library(igraph)
library(geosphere)
library(data.table)
## Kai's edit
library(dplyr)
library(reshape2)
library(UScensus2010)
library(choroplethr)
library(plotly)
## Kai's edit
source("../lib/findpath.R")
source("../lib/Kai_code.R")
library(shiny)
library(leaflet)
library(ggmap)
library(ggplot2)
library(RCurl)
library(RJSONIO)
library(igraph)
library(geosphere)
library(data.table)
## Kai's edit
library(dplyr)
library(reshape2)
library(UScensus2010)
library(choroplethr)
library(plotly)
## Kai's edit
source("../lib/findpath.R")
source("../lib/Kai_code.R")
library(shiny)
library(leaflet)
library(ggmap)
library(ggplot2)
library(RCurl)
library(RJSONIO)
library(igraph)
library(geosphere)
library(data.table)
## Kai's edit
library(dplyr)
library(reshape2)
library(UScensus2010)
library(choroplethr)
library(plotly)
## Kai's edit
source("../lib/findpath.R")
source("../lib/Kai_code.R")
runApp()
runApp()
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?menuSubItem()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/ADS/project2/Spr2017-proj2-grp7/app")
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
?icon
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
runApp('~/Desktop/ADS/project2/Spr2017-proj2-grp7/app_kai')
